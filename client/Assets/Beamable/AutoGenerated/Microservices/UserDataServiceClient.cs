//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.Server.UserDataService"/> </summary
    public sealed class UserDataServiceClient : MicroserviceClient
    {
        
        public UserDataServiceClient(BeamContext context = null) : 
                base(context)
        {
        }
        
        /// <summary>
        /// Call the SaveMessage method on the UserDataService microservice
        /// <see cref="Beamable.Server.UserDataService.SaveMessage"/>
        /// </summary>
        public Beamable.Common.Promise<bool> SaveMessage(string message, int x, int y)
        {
            string serialized_message = this.SerializeArgument<string>(message);
            string serialized_x = this.SerializeArgument<int>(x);
            string serialized_y = this.SerializeArgument<int>(y);
            string[] serializedFields = new string[] {
                    serialized_message,
                    serialized_x,
                    serialized_y};
            return this.Request<bool>("UserDataService", "SaveMessage", serializedFields);
        }
        
        /// <summary>
        /// Call the GetMessage method on the UserDataService microservice
        /// <see cref="Beamable.Server.UserDataService.GetMessage"/>
        /// </summary>
        public Beamable.Common.Promise<System.Collections.Generic.List<string>> GetMessage(int x, int y)
        {
            string serialized_x = this.SerializeArgument<int>(x);
            string serialized_y = this.SerializeArgument<int>(y);
            string[] serializedFields = new string[] {
                    serialized_x,
                    serialized_y};
            return this.Request<System.Collections.Generic.List<string>>("UserDataService", "GetMessage", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersUserDataServiceClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_String : MicroserviceClientDataWrapper<string>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Int32 : MicroserviceClientDataWrapper<int>
        {
        }
    }
    
    [BeamContextSystemAttribute()]
    internal static class ExtensionsForUserDataServiceClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute()]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            builder.AddScoped<UserDataServiceClient>();
        }
        
        public static UserDataServiceClient UserDataService(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<UserDataServiceClient>();
        }
    }
}
